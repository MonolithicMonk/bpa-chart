# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Hostname to be used for default hostpaths in ingress, prefixed with the charts name
  nameOverride: ""
  # -- Hostname prefix to be used for default hostpaths in ingress
  fullnameOverride: ""

  # -- Domain suffix to be used for default hostpaths in ingress
  ingressSuffix: .bpa

  persistence:
    # -- Name of existing secret to use for PostgreSQL passwords
    existingSecret: false

  # -- The used ledger. Will be used for default values. Any of: idu, bcovrin-test
  ledger: bcovrin-test

bpa:
  image:
    repository: ghcr.io/hyperledger-labs/business-partner-agent-new
    pullPolicy: IfNotPresent
    # --  Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: ""

  name: 

  acapy:
    url: 
    apiKey: 
    bearerToken: 
    endpoint: 

  db:
    username:
    password: ""
    host:
    port:
    database:

  config:
    # -- Override name shown in the frontend (may contain whitespaces and so on). Default: Helm release name, capitalized
    nameOverride: ""

    # -- Override title shown in the browser tab. Default: Helm release name, capitalized (or NameOverride if given)
    titleOverride: ""

    jmx:
      enabled: false
      port: 9999

    pg:
      # -- Sets the database schema the bpa backend should use, defaults to 'publlic' if empty
      schema: ""
    security:
      # -- Enable login page and endpoint security
      enabled: true
      # -- Enable strict strict security headers
      strict: true
      # -- Comma separated list of csp host sources, used to set allowed origins
      allowedHosts: {}
    bootstrap:
      # -- The name of the default admin user
      username: admin
      # -- Default password
      password: changeme
    ledger:
      browserUrlOverride: ""
    # -- The scheme that is used to register the profile endpoint on the ledger
    scheme: https
    web:
      only: false
    creddef:
      revocationRegistrySize: 3000
    imprint:
      enabled: false
      urlOverride: ""
    privacyPolicy:
      enabled: false
      urlOverride: ""
    i18n:
      locale: en
      fallbackLocale: en
    # -- Frontend runtime variables which are injected into the frontend code on container startup (only if at least one runtime variable value has been set). These function e.g. as feature toggles for specific frontend changes. NOTE: The container startup time is impacted by using these.
    frontend:
      # -- Setting this to true keeps the sidebar in the frontend closed when loading the page in a browser
      closeSidebar: false
      # -- Setting this to true hides the sidebar burger button in the frontend. In combination with 'closeSidebar' the sidebar is completely gone.
      hideSidebarButton: false
    # -- log4j2 configuration file which must be in the classpath. Use log4j2.yml for non-json. Will be ignored if logging is set and has values.
    logConfigurationFile: log4j2-prod.xml

    # -- log configuration overwrite, if set logConfigurationFile will be ignored. Takes an array of logger names and levels. See also log4j2.
    logging:
    #  - name: org.hyperledger.bpa
    #    level: warn
    # -- Mailjet service integration, requires a developer account with verified sender email and generated api keys
    mail:
      # -- Mail service verified sender email address
      username: ""
      # -- Mail service api key
      apiKey: ""
      # -- Mail service api secret
      apiSecret: ""

  imagePullSecrets: []


  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    clusterIP:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # Uncomment this to define your own hosts and override global.ingressSuffix
    # hosts:
    #     host:
    #     paths: ['/']
    tls: []
    #  - secretName: my-bpa-tls
    #    hosts:
    #      - my-bpa.local

  openshift:
    route:
      enabled: false
      path: "/"
      targetPort: http
      timeout: 30s
      tls:
        enabled: true
        insecureEdgeTerminationPolicy: None
        termination: edge
      wildcardPolicy: None

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: "2"
      memory: 384Mi
    requests:
      cpu: "0.2"
      memory: 384Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

micronaut:
  server: 
    host:
    port: 
  application:
    name:

consul:
  enabled: 
  host: ""
  metadata: ""
  port: 
  secure: ""
  ipAddr: ""
  preferIpAddress: 

keycloak:
  enabled: false

  clientId: <your keycloak client id>
  clientSecret: <your keycloak client secret>

  config:
    rolesName: roles
    nameKey: preferred_username
    # redirect uri after login with password and username
    redirectUri: "${bpa.scheme}://${bpa.host}/logout"
    scopes: openid
    issuer: <your keycloak realm issuer url>
    endsessionUrl: <your keycloak realm end session url>
    # redirect uri to process oauth code flow
    bpaRedirectUrl:
    bpaAuthenticationType:
    bpaKeycloakAuthMethod:
    bpaKeycloakAuthorizationUrl:
    bpaKeycloakConfigPath:
    bpaKeycloakCookieDomain:
    bpaKeycloakCookieEnabled:
    bpaKeycloakCookieHttpOnly:
    bpaKeycloakCookieMaxAge:
    bpaKeycloakCookieName:
    bpaKeycloakCookieSameSite:
    bpaKeycloakCookieSecure:
    bpaKeycloakEndsessionRedirectUri:
    bpaKeycloakGrantType:
    bpaKeycloakJwksUri:
    bpaKeycloakOpenidResponseMode:
    bpaKeycloakOpenidResponseType:
    bpaKeycloakRedirectUnauthorized:
    bpaKeycloakRolesSeparator:
    bpaKeycloakTokenUrl:
    bpaKeycloakUserInfo:
    bpaKeycloakVcauthnPresReqConfId:

schemas:
  enabled: true
  config: {}
#    bank-account:
#      id: "M6Mbe3qx7vB4wpZF4sBRjt:2:bank_account:1.0"
#      label: "Bank Account"
#      defaultAttributeName: "iban"
#      restrictions:
#        - issuerDid: "${bpa.did.prefix}M6Mbe3qx7vB4wpZF4sBRjt"
#          label: "Demo Bank"
#    commercial-register:
#      id: "5mwQSWnRePrZ3oF67C4KqD:2:commercialregister:1.0"
#      label: "Commercial Register"
#      defaultAttributeName: "companyName"
#      restrictions:
#        - issuerDid: "${bpa.did.prefix}5mwQSWnRePrZ3oF67C4KqD"
#          label: "Commercial Register"

ux:
  # -- The ux preset configuration.
  # -- Allowed values: custom, default
  # -- When using preset=default, no ux configmaps will be created; app runs with default configuration
  # -- When using preset=custom, you need to populate the config object.
  preset: default
  config: {}
#    buttons:
#      primary:
#        text: false
#        outlined: false
#      secondary:
#        text: true
#        outlined: false
#    theme:
#      dark: false
#      themes:
#        light:
#          primary: '#4A148C'
#          secondary: '#424242'
#          accent: '#82B1FF'
#          error: '#FF5252'
#          info: '#2196F3'
#          success: '#4CAF50'
#          warning: '#FFC107'
#          bgLight: "#FAFAFA"
#          bgLight2: "#ECECEC"
#          font: "#313132"
#          anchor: "#1A5A96"
#          anchorHover: "#3B99FC"
#          icons: "#000000"
#    favicon:
#      href: "<url to fav icon>"
#    navigation:
#      avatar:
#        agent:
#          enabled: true
#          default: true
#          src: "<url to logo image - need enabled=true default=false>"
#          showName: true
#      settings:
#        location: "top"
#      about:
#        enabled: true
#      logout:
#        enabled: false
#    header:
#      logout:
#        enabled: true


acapy:
  enabled: false
  image:
    repository: bcgovimages/aries-cloudagent
    pullPolicy: IfNotPresent
    # --  Overrides the image tag whose default is the chart appVersion.
    tag: py36-1.16-1_0.7.4


  # -- Used for backwards compatibility
  postgresql:
    # -- Can be used to overwrite 'postgresql.postgresqlDatabase', if set acapy and bpa backends use separate databases
    database: ""
  
  endPointUrl: ""

  admin:
    enabled: 
    # Specify the host and port on which to run the
    # administrative server. If not provided, no admin
    # server is made available.
    # Readiness and liveness checks will fail if not enabled
    # Example <host> <port> example.com 8031
    host: 
    # 0.0.0.0
    
    # Enable or disable admin url api key
    apiKey:
      enabled:
      # -- Please change: key used to protect acapy's admin endpoint
      adminURLApiKey: ""
  
  db:
    username: 
    password: 
    host: 
    port: 
    database: 
  
  # -- Please change: the agent seed, 32 characters e.g. a UUID without the dashes. If the ledger is bcovrin-test the seed will be registered automatically. In all other cases this needs to happen manually beforehand.
  agentSeed: ""
  # -- Please change: Wallet encryption key, be aware that if this value is changed later aca-py needs to be restarted with the '--wallet-rekey' param which is not mapped
  walletKey: ""
  
  # Send webhooks containing internal state changes to the
  # specified URL. Optional API key to be passed in the
  # request body can be appended using a hash separator
  # [#] <url#api_key>
  webhookUrl: ""

  # After startup, generate and print a new out-of-band
  # connection invitation URL. Default: false.
  invite:

  # Specify the label of the generated invitation
  inviteLabel: ""

  # Generate tracing events.  Default: false
  trace:

  # Target for trace events ("log", "message", or http endpoint)
  traceTarget: ""

  # Tag to be included when logging events
  traceTag: ""

  # Label (agent name) used logging events
  traceLabel: ""

  # Specifies the image url for this agent.
  imageUrl: ""

  # Specifies a new master key value to which to rotate
  # and to open the wallet next time
  walletRekey: ""

  # If this parameter is set and an agent already has a
  # public DID, and the '--seed' parameter specifies a new
  # DID, the agent will use the new DID in place of the
  # existing DID. Default: false.
  replacePublic:

  # If an existing wallet exists with the same name,
  # remove and recreate it during provisioning.  Default: false
  recreateWallet:

  labelOverride: ""

  readOnlyMode: false

  staticArgs:
    autoAcceptInvites: false
    autoAcceptRequests: false
    autoRespondMessages: false
    autoRespondCredentialProposal: false
    autoRespondCredentialOffer: false
    autoRespondCredentialRequest: false
    autoRespondPresentationProposal: true
    autoRespondPresentationRequest: false
    autoStoreCredential: true
    autoVerifyPresentation: false
    autoPingConnection: true
    autoProvision: true
    autoDiscloseFeatures: true
    notifyRevocation: true
    monitorRevocationNotification: true
    monitorPing: true
    emitNewDidcommPrefix: true
    emitNewDidcommMimeType: true
    enableUndeliveredQueue: true
    exchUseUnencryptedTags: true
    preserveExchangeRecords: false
    publicInvites: true
    # -- indy or askar
    walletType: askar
    logLevel: debug

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    runAsUser: 1001

  service:
    type: ClusterIP
    clusterIP: 
    adminPort: 8031
    httpPort: 8030

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    # Uncomment this to define your own hosts and override global.ingressSuffix
    # hosts:
    #     host:
    #     paths: ['/']
    tls: []
    #  - secretName: my-acapy-tls
    #    hosts:
    #      - my-acapy.local
    className: ""

  openshift:
    route:
      enabled: false
      path: "/"
      targetPort: http
      timeout: 30s
      tls:
        enabled: true
        insecureEdgeTerminationPolicy: None
        termination: edge
      wildcardPolicy: None

  tails:
    # -- Set to true to enable revocation (external tails server required)
    enabled: false

    # -- Override the otherwise ledger-specifically generated base URL of the external tails server
    baseUrlOverride: ""

    # -- Override the otherwise ledger-specifically generated upload URL of the external tails server
    uploadUrlOverride: ""

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    requests:
      cpu: 100m
      memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

diode:
  enabled: false
  replicaCount: 1

  image:
    repository: cloud.canister.io:5000/dgateled/diode-image-bullseye
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.1.7"

  imagePullSecrets:
    - name: registry-pullsecrets
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    # Likely true if bind and false if publish
    enabled: false
    type: ClusterIP
    clusterIP:
      ip:  
      ports: 
        - port: 8080
          targetPort: 8080
          protocol: TCP
          name: http
        - port: 443
          targetPort: 443
          protocol: TCP
          name: https
    loadBalancer: 
      ip: 
      ports: 
        - port: 
          targetPort: 
          protocol: 
          name: 
    nodePort: 
      ip: 
      ports: 
        - port: 
          targetPort: 
          protocol: 
          name: 

  logging:
    displayAddress:
      enabled: true
    displayProcess:
      enabled: true

  # base64 encoded diode private keys for dbpath
  # Add up to 5 keys
  base64PrivateKey: 
    one: 09T5rBACDmxhc3RfdXBkYXRlX2F0BGQupAIHcHJpdmF0Zd8BLS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IUUNBUUVFSUxNOHhlbGFNMEpDR0pUUmpCa3dOSGdRSUhSMlhXMHgzSXIwSlQxR2JRYVlvQWNHQlN1QkJBQUsKb1VRRFFnQUVyelBIdEJrait0UXpoV2pPOE9TWHNxdGJ5SDYyNU5ZSlJmWTFaOU5LMHFQWlNaMk0wZDdSTGRHQgpqcXJHYVhGRXE0b3B1WG9TUlZoWXNMZCs0czEyYXc9PQotLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCg==
    two: 
    three: 
    four:
    five:

  # Use a list of options and command properties to construct a diode cli command
  # The example below will generate these commands: 
  #  diode   -dbpath /go/diode/BASE64PRIVATEKEY_ONE  publish -public 5445:5455 -public 5666:5666 >/dev/null 2>&1 &
  #  diode   -bind 4005:0xfbd2428cedb9c69758eb809e7ba7efbda50bee5a:4005 -dbpath /go/diode/BASE64PRIVATEKEY_TWO  publish >/dev/null 2>&1 &
  #  diode   -dbpath /go/diode/BASE64PRIVATEKEY_THREE -bind 5566:0xfbd2428cedb9c69758eb809e7ba7efbda50bee5a:5566  publish >/dev/null 2>&1 &
  # To use a specific private key for your dbpath eg the first one, 
  # reference it like so: base64PrivateKey.one
  cli:
    - options:
        - key: 
          value: 
      command:
        publish:
          - key: 
            value: 
          - key: 
            value: 
    # - options:
    #     - key: bind
    #       value: 2020:0xfbd2428cedb9c69758eb809e7ba7efbda50bee5a:4005
    #     - key: dbpath
    #       value: base64PrivateKey.two
    #   command:
    #     publish: ""
    # - options:
    #     - key: dbpath
    #       value: base64PrivateKey.three
    #     - key: bind
    #       value: 2020:0xfbd2428cedb9c69758eb809e7ba7efbda50bee5a:5566
    #   command:
    #     publish: ""


  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    keepPvc: true
    # Size of storage. Default: 20Mi
    size: "20Mi"